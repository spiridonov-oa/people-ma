"use strict";var ApplicationConfiguration=function(){var applicationModuleName="peopleMa",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("about"),ApplicationConfiguration.registerModule("admin"),ApplicationConfiguration.registerModule("arches"),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("people"),ApplicationConfiguration.registerModule("projects",["slick"]),ApplicationConfiguration.registerModule("users"),angular.module("about").run(["Menus",function(Menus){Menus.addMenuItem("mainmenu","About Us","about","left-margin","/about-us",!0,null,3)}]),angular.module("about").config(["$stateProvider",function($stateProvider){$stateProvider.state("about",{url:"/about",templateUrl:"modules/about/views/about.client.view.html"})}]),angular.module("about").controller("AboutUsController",["$scope","$stateParams","$state","$location","Authentication",function($scope,$stateParams,$state,$location,Authentication){$scope.authentication=Authentication}]),angular.module("admin").run(["Menus",function(Menus){Menus.addMenuItem("admin-menu","Home","admin","dropdown","/admin"),Menus.addMenuItem("admin-menu","Projects","adminProjects","dropdown","/admin/projects"),Menus.addMenuItem("admin-menu","Concepts","adminConcepts","dropdown","/admin/concepts"),Menus.addMenuItem("admin-menu","People","adminPeople","dropdown","/admin/people")}]),angular.module("admin").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{url:"/admin",templateUrl:"modules/administrator/views/admin.client.view.html"}).state("adminProjects",{url:"/admin/projects",controller:"AdminProjectsController",templateUrl:"modules/administrator/views/admin-projects.client.view.html"}).state("adminCurrentProject",{url:"/admin/projects/:projectId",controller:"AdminProjectsController",templateUrl:"modules/administrator/views/admin-projects.client.view.html"}).state("adminConcepts",{url:"/admin/concepts",controller:"AdminConceptsController",templateUrl:"modules/administrator/views/admin-projects.client.view.html"}).state("adminCurrentConcept",{url:"/admin/concepts/:projectId",controller:"AdminConceptsController",templateUrl:"modules/administrator/views/admin-projects.client.view.html"}).state("adminPeoples",{url:"/admin/people",controller:"AdminPeopleController",templateUrl:"modules/administrator/views/admin-people.client.view.html"}).state("adminCurrentPerson",{url:"/admin/people/:personId",controller:"AdminPeopleController",templateUrl:"modules/administrator/views/admin-people.client.view.html"})}]),angular.module("admin").controller("AdminConceptsController",["$scope","$state","Authentication","$location","ProjectFactory","Concepts",function($scope,$state,Authentication,$location,ProjectFactory,Concepts){$scope.authentication=Authentication,$scope.project=ProjectFactory.getProject("concept",Concepts)}]),angular.module("admin").controller("AdminPeopleController",["$scope","$state","Authentication","$location","AdminPersonFactory",function($scope,$state,Authentication,$location,AdminPersonFactory){$scope.authentication=Authentication,$scope.person=AdminPersonFactory.getPerson()}]),angular.module("admin").controller("AdminProjectsController",["$scope","$state","Authentication","$location","AdminProjectFactory","Projects",function($scope,$state,Authentication,$location,AdminProjectFactory,Projects){$scope.authentication=Authentication,$scope.project=AdminProjectFactory.getProject("project",Projects)}]),angular.module("admin").controller("AdminController",["$scope","$state","Authentication","$location","ProjectFactory",function($scope,$state,Authentication){$scope.authentication=Authentication}]),angular.module("admin").directive("adminMenu",["Menus","$state",function(Menus,$state){return{restrict:"AE",replace:!0,templateUrl:"modules/administrator/directives/admin-menu.view.html",link:function(scope){scope.adminMenu={},scope.adminMenu=Menus.getMenu("admin-menu"),scope.adminMenu.active=$state.current.name}}}]),angular.module("admin").factory("AdminProjectFactory",["$state","$location",function($state,$location){var project={},init=function(projectType,Service){var projectId=$state.params.projectId,projectUrl="/admin/"+projectType+"s";return project.path="#!/admin/"+projectType+"s",project.currentProjectId=projectId,project.isCreateNewProject=!projectId,project.create=function(){var instance=new Service({name:project.data.name||"",times:project.data.times||"",description:project.data.description||"",tags:project.data.tags,icon:project.data.icon,photos:[],section:project.data.section||"commerce",type:projectType,order:project.data.order||0});instance.$save(function(){$location.path(projectUrl),project.find(),project.data={}},function(errorResponse){project.error=errorResponse.data.message})},project.remove=function(data){if(data){data.$remove();for(var i in project.objArray)project.objArray[i]===data&&project.objArray.splice(i,1)}else project.data.$remove(function(){$location.path(projectUrl),project.find()})},project.update=function(){var data=project.data;data.$update(function(){$location.path(projectUrl+"/"+data._id),project.find()},function(errorResponse){project.error=errorResponse.data.message})},project.find=function(){Service.query(function(data){project.objArray=data})},project.submit=function(){project.isCreateNewProject?project.create():project.update()},project.findById=function(objId){return Service.get({projectId:objId})},project.findOne=function(){Service.get({projectId:projectId},function(data){project.data=data,project.find()})},project.currentProjectId?project.findOne():(project.data={},project.find()),project};return{getProject:function(type,Service){return init(type,Service)}}}]),angular.module("admin").factory("AdminPersonFactory",["$state","$location","People",function($state,$location,People){var person={},init=function(){var personId=$state.params.personId,personUrl="/admin/people";return person.path="#!/admin/people",person.currentPersonId=personId,person.isCreateNewPerson=!personId,person.create=function(){var instance=new People({fName:person.data.fName||"",lName:person.data.lName||"",position:person.data.position||"",photo:person.data.photo||"",ava:person.data.ava||"",order:person.data.order||0});instance.$save(function(){$location.path(personUrl),person.find(),person.data={}},function(errorResponse){person.error=errorResponse.data.message})},person.remove=function(data){if(data){data.$remove();for(var i in person.peopleArray)person.peopleArray[i]===data&&person.peopleArray.splice(i,1)}else person.data.$remove(function(){$location.path(personUrl),person.find()})},person.update=function(){var data=person.data;data.$update(function(){$location.path(personUrl+"/"+data._id),person.find()},function(errorResponse){person.error=errorResponse.data.message})},person.find=function(){People.query(function(data){person.peopleArray=data},function(errorResponse){person.error=errorResponse.data.message})},person.submit=function(){person.isCreateNewPerson?person.create():person.update()},person.findById=function(objId){return People.get({personId:objId},function(data){person.data=data,person.find()},function(errorResponse){person.error=errorResponse.data.message})},person.findOne=function(){People.get({personId:personId},function(data){person.data=data,person.find()},function(errorResponse){person.error=errorResponse.data.message})},person.currentPersonId?person.findOne():(person.data={},person.find()),person};return{getPerson:function(){return init()}}}]),angular.module("admin").factory("Concepts",["$resource",function($resource){return $resource("concepts/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("admin").factory("People",["$resource",function($resource){return $resource("people/:personId",{personId:"@_id"},{update:{method:"PUT"}})}]),angular.module("admin").factory("Projects",["$resource",function($resource){return $resource("projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("arches").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArches",{url:"/arches",templateUrl:"modules/arches/views/list-arches.client.view.html"}).state("createArch",{url:"/arches/create",templateUrl:"modules/arches/views/create-arch.client.view.html"}).state("viewArch",{url:"/arches/:archId",templateUrl:"modules/arches/views/view-arch.client.view.html"}).state("editArch",{url:"/arches/:archId/edit",templateUrl:"modules/arches/views/edit-arch.client.view.html"})}]),angular.module("arches").controller("ArchesController",["$scope","$stateParams","$location","Authentication","Arches",function($scope,$stateParams,$location,Authentication,Arches){$scope.authentication=Authentication,$scope.create=function(){var arch=new Arches({name:this.name});arch.$save(function(response){$location.path("arches/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(arch){if(arch){arch.$remove();for(var i in $scope.arches)$scope.arches[i]===arch&&$scope.arches.splice(i,1)}else $scope.arch.$remove(function(){$location.path("arches")})},$scope.update=function(){var arch=$scope.arch;arch.$update(function(){$location.path("arches/"+arch._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.arches=Arches.query()},$scope.findOne=function(){$scope.arch=Arches.get({archId:$stateParams.archId})}}]),angular.module("arches").factory("Arches",["$resource",function($resource){return $resource("arches/:archId",{archId:"@_id"},{update:{method:"PUT"}})}]),angular.module("articles").run(["Menus",function(){}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("mainmenu","Concept","concept","dropdown","/concept",!0,null,2),Menus.addMenuItem("mainmenu","News","news","dropdown","/news",!0,null,5)}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("news",{url:"/news",templateUrl:"modules/core/views/people.client.view.html"})}]).run(["$rootScope","$state",function($rootScope,$state){$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState){$state.previous=fromState})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("admin-menu"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$state","Authentication",function($scope,$state,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("mainmenu",["Menus",function(Menus){return{restrict:"AE",templateUrl:"modules/core/directives/template/mainmenu.view.html",link:function(scope){scope.menu=Menus.getMenu("mainmenu"),scope.menuItemSize=Math.floor(12/scope.menu.length)}}}]),angular.module("core").directive("stateClass",["$state","$rootScope",function($state,$rootScope){function link(scope,element){function stateChangeStartHandler(e,toState,toParams,fromState){scope.body=scope.body||{},scope.body["class"]="",fromState.name&&(scope.body["class"]=" from-"+fromState.name+" "),scope.body["class"]+=toState.name+" ",pageAnimator.animate(element,fromState,toState)}$rootScope.$on("$stateChangeStart",stateChangeStartHandler)}var pageAnimator={animate:function(element,fromState,toState){this.page=toState.name,this.prevPage=fromState.name||null,this.animationTime=1e3,this.$body=jQuery(element),this.$circle=this.$body.find(".circle"),this.pages={projects:"projects",home:"home",concept:"concept",aboutAs:"about",people:"people"},this.vw=jQuery(window).width()/100,this.vh=jQuery(window).height()/100,this.animateCircle()},homeAnimate:function(){this.prevPage,this.animationTime},projectsAnimate:function(){{var $projectsPage=(this.prevPage,this.animationTime,this.$body.find("."+this.pages.projects+"-page"));this.vw}$projectsPage.css("opacity",0),console.log("projectsAnimate")},conceptAnimate:function(){this.prevPage,this.animationTime},aboutAnimate:function(){this.prevPage,this.animationTime},peopleAnimate:function(){this.prevPage,this.animationTime},animateCircle:function(callback){var $circle=this.$circle,animationTime=this.animationTime,callback="function"==typeof callback?callback:function(){};$circle.stop();var getOptions=function(time){return time=time||animationTime,{duration:time,done:callback}};this.page===this.pages.projects&&(this.prevPage===this.pages.home?$circle.animate({bottom:"60%"},getOptions(animationTime/2)).animate({right:"10%"},getOptions(animationTime/2)):$circle.animate({bottom:"60%",right:"10%",height:"10em",width:"10em"},getOptions())),this.page===this.pages.home&&(this.prevPage===this.pages.projects?$circle.animate({right:"58%"},getOptions(animationTime/2)).animate({bottom:"0"},getOptions(animationTime/2)):$circle.animate({right:"58%",bottom:"0",height:"10em",width:"10em"},getOptions()))},resizeWindow:function(){var screenWidth=window.outerWidth(),screenHeight=window.outerHeight();screenWidth/screenHeight>2&&this.$body.width(screenWidth/2)}};return{restrict:"AE",link:link}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("admin-menu"),this.addMenu("mainmenu",!0)}]),angular.module("admin").factory("Projects",["$resource",function($resource){return $resource("projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("people").run(["Menus",function(Menus){Menus.addMenuItem("mainmenu","People","people","item","/people",!0,null,4)}]),angular.module("people").config(["$stateProvider",function($stateProvider){$stateProvider.state("people",{url:"/people",templateUrl:"modules/people/views/people.client.view.html"}).state("createPeople",{url:"/people/create",templateUrl:"modules/people/views/create-people.client.view.html"}).state("viewPeople",{url:"/people/:peopleId",templateUrl:"modules/people/views/view-people.client.view.html"}).state("editPeople",{url:"/people/:peopleId/edit",templateUrl:"modules/people/views/edit-people.client.view.html"})}]),angular.module("people").controller("PeopleController",["$scope","$stateParams","$state","$location","Authentication","People",function($scope,$stateParams,$state,$location,Authentication,People){$scope.authentication=Authentication,$scope.people={},$scope.person={},$scope.people.find=function(){People.query(function(data){$scope.people.data=data})},$scope.selectPerson=function(key){$scope.person.selected=key}}]),angular.module("people").directive("people",function(){return{restrict:"AE",replace:!0,scope:"=",templateUrl:"modules/people/directives/template/people.view.html",link:function(scope){scope.people=[{name:"Project 1",image:"/img/people/no-image.jpg",position:1},{name:"Project 2",image:"/img/people/no-image.jpg",position:2},{name:"Project 3",image:"/img/people/no-image.jpg",position:3},{name:"Project 4",image:"/img/people/no-image.jpg",position:4},{name:"Project 5",image:"/img/people/no-image.jpg",position:5}]}}}),angular.module("admin").factory("People",["$resource",function($resource){return $resource("people/:personId",{personId:"@_id"},{update:{method:"PUT"}})}]),angular.module("projects").run(["Menus",function(Menus){Menus.addMenuItem("mainmenu","Projects","projects","dropdown","/projects",!0,null,1)}]),angular.module("projects").config(["$stateProvider",function($stateProvider){$stateProvider.state("projects",{url:"/projects",templateUrl:"modules/projects/views/list-projects.client.view.html"}).state("createProject",{url:"/projects/create",templateUrl:"modules/projects/views/create-project.client.view.html"}).state("viewProject",{url:"/projects/:projectId",templateUrl:"modules/projects/views/view-project.client.view.html"}).state("editProject",{url:"/projects/:projectId/edit",templateUrl:"modules/projects/views/edit-project.client.view.html"})}]),angular.module("projects").controller("ProjectsController",["$scope","$stateParams","$state","$location","Authentication","Projects",function($scope,$stateParams,$state,$location,Authentication,Projects){$scope.authentication=Authentication;var Service=Projects;$scope.page={},$scope.projects={},$scope.projects.commerce=[],$scope.projects.live=[],$scope._organizeProducts=function(data){data.forEach(function(project){"commerce"===project.section?$scope.projects.commerce.push(project):$scope.projects.live.push(project)})},$scope.page.find=function(){Service.query(function(data){$scope._organizeProducts(data)})};var projects={};projects.commerce=$scope.projects,projects.live=[{name:"Project live 1",image:"img/projects/icons_project/projects_live/icons.png",position:1},{name:"Project live 2",image:"img/projects/icons_project/projects_live/icons1.png",position:2},{name:"Project live 3",image:"img/projects/icons_project/projects_live/icons2.png",position:3}],$scope.projectsList=projects}]),angular.module("projects").directive("projects",function(){return{restrict:"AE",replace:!0,scope:{set:"="},templateUrl:"modules/projects/directives/template/projects.view.html",link:function(){}}}),angular.module("admin").factory("Concepts",["$resource",function($resource){return $resource("concepts/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("admin").factory("Projects",["$resource",function($resource){return $resource("projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);