"use strict";var ApplicationConfiguration=function(){var applicationModuleName="peopleMa",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("about-us"),ApplicationConfiguration.registerModule("architectors"),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("projects"),ApplicationConfiguration.registerModule("people"),ApplicationConfiguration.registerModule("projects"),ApplicationConfiguration.registerModule("users"),angular.module("about-us").run(["Menus",function(Menus){Menus.addMenuItem("mainmenu","About Us","about-us","left-margin","/about-us",!0,null,3)}]),angular.module("about-us").config(["$stateProvider",function($stateProvider){$stateProvider.state("about-us",{url:"/about-us",templateUrl:"modules/about-us/views/about-us.client.view.html"})}]),angular.module("about-us").controller("AboutUsController",["$scope","$rootScope","$stateParams","$state","$location","Authentication",function($scope,$rootScope,$stateParams,$state,$location,Authentication){$scope.authentication=Authentication,$rootScope.stateName=function(){return $state.current.name}}]),angular.module("architectors").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Architectors","architectors","dropdown","/architectors(/create)?"),Menus.addSubMenuItem("topbar","architectors","List Architectors","architectors"),Menus.addSubMenuItem("topbar","architectors","New Architector","architectors/create")}]),angular.module("architectors").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArchitectors",{url:"/architectors",templateUrl:"modules/architectors/views/list-architectors.client.view.html"}).state("createArchitector",{url:"/architectors/create",templateUrl:"modules/architectors/views/create-architector.client.view.html"}).state("viewArchitector",{url:"/architectors/:architectorId",templateUrl:"modules/architectors/views/view-architector.client.view.html"}).state("editArchitector",{url:"/architectors/:architectorId/edit",templateUrl:"modules/architectors/views/edit-architector.client.view.html"})}]),angular.module("architectors").controller("ArchitectorsController",["$scope","$stateParams","$location","Authentication","Architectors",function($scope,$stateParams,$location,Authentication,Architectors){$scope.authentication=Authentication,$scope.create=function(){var architector=new Architectors({name:this.name});architector.$save(function(response){$location.path("architectors/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(architector){if(architector){architector.$remove();for(var i in $scope.architectors)$scope.architectors[i]===architector&&$scope.architectors.splice(i,1)}else $scope.architector.$remove(function(){$location.path("architectors")})},$scope.update=function(){var architector=$scope.architector;architector.$update(function(){$location.path("architectors/"+architector._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.architectors=Architectors.query()},$scope.findOne=function(){$scope.architector=Architectors.get({architectorId:$stateParams.architectorId})}}]),angular.module("architectors").factory("Architectors",["$resource",function($resource){return $resource("architectors/:architectorId",{architectorId:"@_id"},{update:{method:"PUT"}})}]),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("mainmenu","Concept","concept","dropdown","/concept",!0,null,2),Menus.addMenuItem("mainmenu","News","news","dropdown","/news",!0,null,5)}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("news",{url:"/news",templateUrl:"modules/core/views/people.client.view.html"})}]),angular.module("core").controller("AboutUsController",["$scope","$state","$rootScope","Authentication",function($scope,$state,$rootScope,Authentication){$scope.authentication=Authentication,$rootScope.stateName=function(){return $state.current.name}}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$state","$rootScope","Authentication",function($scope,$state,$rootScope,Authentication){$scope.authentication=Authentication,$rootScope.stateName=function(){return $state.current.name}}]),angular.module("core").directive("circle",function(){return{restrict:"AE",templateUrl:"modules/core/directives/template/circle.view.html",link:function(){}}}),angular.module("core").directive("mainmenu",["Menus",function(Menus){return{restrict:"AE",templateUrl:"modules/core/directives/template/mainmenu.view.html",link:function(scope){scope.menu=Menus.getMenu("mainmenu"),scope.menuItemSize=Math.floor(12/scope.menu.length)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar"),this.addMenu("mainmenu",!0)}]),angular.module("people").run(["Menus",function(Menus){Menus.addMenuItem("mainmenu","People","people","item","/people",!0,null,4)}]),angular.module("people").config(["$stateProvider",function($stateProvider){$stateProvider.state("people",{url:"/people",templateUrl:"modules/people/views/people.client.view.html"}).state("createPeople",{url:"/people/create",templateUrl:"modules/people/views/create-people.client.view.html"}).state("viewPeople",{url:"/people/:peopleId",templateUrl:"modules/people/views/view-people.client.view.html"}).state("editPeople",{url:"/people/:peopleId/edit",templateUrl:"modules/people/views/edit-people.client.view.html"})}]),angular.module("people").controller("PeopleController",["$scope","$rootScope","$stateParams","$state","$location","Authentication",function($scope,$rootScope,$stateParams,$state,$location,Authentication){$scope.authentication=Authentication,$rootScope.stateName=function(){return $state.current.name},$scope.people=[{firstName:"Alla",secondName:"Micheeva",img:"img/1.jpg",order:1},{firstName:"Nina",secondName:"Micheeva",img:"img/1.jpg",order:2},{firstName:"Zoya",secondName:"Micheeva",img:"img/1.jpg",order:4},{firstName:"Liza",secondName:"Micheeva",img:"img/1.jpg",order:3}]}]),angular.module("people").directive("people",function(){return{restrict:"AE",replace:!0,scope:"=",templateUrl:"modules/people/directives/template/people.view.html",link:function(scope){scope.people=[{name:"Project 1",image:"/img/people/no-image.jpg",position:1},{name:"Project 2",image:"/img/people/no-image.jpg",position:2},{name:"Project 3",image:"/img/people/no-image.jpg",position:3},{name:"Project 4",image:"/img/people/no-image.jpg",position:4},{name:"Project 5",image:"/img/people/no-image.jpg",position:5}]}}}),angular.module("people").factory("People",["$resource",function($resource){return $resource("people/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("projects").run(["Menus",function(Menus){Menus.addMenuItem("mainmenu","Projects","projects","dropdown","/projects",!0,null,1)}]),angular.module("projects").config(["$stateProvider",function($stateProvider){$stateProvider.state("projects",{url:"/projects",templateUrl:"modules/projects/views/list-projects.client.view.html"}).state("createProject",{url:"/projects/create",templateUrl:"modules/projects/views/create-project.client.view.html"}).state("viewProject",{url:"/projects/:projectId",templateUrl:"modules/projects/views/view-project.client.view.html"}).state("editProject",{url:"/projects/:projectId/edit",templateUrl:"modules/projects/views/edit-project.client.view.html"})}]),angular.module("projects").controller("ProjectsController",["$scope","$rootScope","$stateParams","$state","$location","Authentication","Projects",function($scope,$rootScope,$stateParams,$state,$location,Authentication,Projects){$scope.authentication=Authentication,$rootScope.stateName=function(){return $state.current.name};var projects={};projects.commerce=[{name:"Project 1",image:"img/projects/icons_project/projects_commerce/icons.png",position:1},{name:"Project 2",image:"img/projects/icons_project/projects_commerce/icons1.png",position:2},{name:"Project 3",image:"img/projects/icons_project/projects_commerce/icons3.png",position:3},{name:"Project 4",image:"img/projects/icons_project/projects_commerce/icons4.png",position:4},{name:"Project 5",image:"img/projects/icons_project/projects_commerce/icons5.png",position:5}],projects.live=[{name:"Project live 1",image:"img/projects/icons_project/projects_live/icons.png",position:1},{name:"Project live 2",image:"img/projects/icons_project/projects_live/icons1.png",position:2},{name:"Project live 3",image:"img/projects/icons_project/projects_live/icons2.png",position:3}],$scope.projectsList=projects,$scope.create=function(){var project=new Projects({name:this.name});project.$save(function(response){$location.path("projects/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(project){if(project){project.$remove();for(var i in $scope.projects)$scope.projects[i]===project&&$scope.projects.splice(i,1)}else $scope.project.$remove(function(){$location.path("projects")})},$scope.update=function(){var project=$scope.project;project.$update(function(){$location.path("projects/"+project._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.projects=Projects.query()},$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId})}}]),angular.module("projects").directive("projects",function(){return{restrict:"AE",replace:!0,scope:{set:"="},templateUrl:"modules/projects/directives/template/projects.view.html",link:function(){}}}),angular.module("projects").factory("Projects",["$resource",function($resource){return $resource("projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);